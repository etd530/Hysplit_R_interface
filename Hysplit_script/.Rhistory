viridis(n=1, begin=0)))
)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
View(MainTrajs)
points(MainTrajs$lon, MainTrajs$lat)
MainTrajs$lat
points(c(1), c(1))
points(c(0.5), c(0.5))
points(c(0.75), c(0.5))
# createing transformed coordantes vectors for plotting
transformed_lat = MainTrajs$lat/max(MainTrajs$lat)
transformed_lon = MainTrajs$lon/max(MainTrajs$lon)
transformed_lon = MainTrajs$lon/max(MainTrajs$lon)
points(transformed_lon, transformed_lat)
# Plot the trajectories
PlotTraj(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0)))
)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
# createing transformed coordantes vectors for plotting
transformed_lat = MainTrajs$lat/max(MainTrajs$lat)
transformed_lon = MainTrajs$lon/max(MainTrajs$lon)
/max(MainTrajs$lon)
max(MainTrajs$lon)
min(MainTrajs$lat)
min(MainTrajs$lon)
# createing transformed coordantes vectors for plotting
transformed_lat = (MainTrajs$lat - min(MainTrajs$lat))/(max(MainTrajs$lat)-min(MainTrajs$lat))
transformed_lon = (MainTrajs$lon - min(MainTrajs$lon))/(max(MainTrajs$lon)-min(MainTrajs$lon))
range(transformed_lat)
range(transformed_lon)
points(transformed_lon, transformed_lat)
# createing transformed coordantes vectors for plotting
miau <- spTransform(MainTrajs$lat)
# createing transformed coordantes vectors for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat)
tranformedPoints <- SpatialPoints(pts, proj4string = "+proj=longlat +datum=NAD27")
tranformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
View(tranformedPoints)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
transformedPoints@coords
plot(transformedPoints)
plot(transformedPoints, add=T)
# Plot the trajectories
PlotTraj(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0)))
)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
# createing transformed coordantes vectors for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
plot(transformedPoints, add=T)
MainTrajlines_df@proj4string
MainTrajlines_df@proj4string == transformedPoints@proj4string
transformedPoints@proj4string
oldpar <- par(no.readonly = TRUE)
par(mar = c(0, 0, 0, 0) + 2)
bb <- bbox(transformedPoints)
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
grid(col = "white")
plot(transformedPoints, add = TRUE, ...)
plot(transformedPoints, add = TRUE)
cc <- coordinates(transformedPoints)
box()
par(oldpar)
PlotTraj(transformedPoints)
# Plot the trajectories
PlotTraj(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0)))
)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
# createing transformed coordantes vectors for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
PlotTraj(transformedPoints)
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
oldpar <- par(no.readonly = TRUE)
par(mar = c(0, 0, 0, 0) + 2)
bb <- bbox(transformedPoints)
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
#PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
grid(col = "white")
plot(transformedPoints, add = TRUE)
cc <- coordinates(transformedPoints)
box()
par(oldpar)
plot(transformedPoints, add=T)
# Plot the trajectories
PlotTraj(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0)))
)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
oldpar <- par(no.readonly = TRUE)
par(mar = c(0, 0, 0, 0) + 2)
bb <- bbox(transformedPoints)
#PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
grid(col = "white")
plot(transformedPoints, add = TRUE)
plot(transformedPoints, add = TRUE)
# Plot the trajectories
PlotTraj(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0)))
)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
plot(transformedPoints, add = TRUE)
par(mar = c(0, 0, 0, 0) + 2)
plot(transformedPoints, add = TRUE)
bb <- bbox(MainTrajlines_df)
#PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
#grid(col = "white")
plot(transformedPoints, add = TRUE)
box()
par(mar = c(0, 0, 0, 0) + 2)
bb <- bbox(MainTrajlines_df)
#PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
#grid(col = "white")
plot(transformedPoints, add = TRUE)
#PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
#grid(col = "white")
raster::plot(transformedPoints, add = TRUE, ptx)
pch = 0:18
#PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
#grid(col = "white")
plot(transformedPoints, add = TRUE, pch=1)
PlotTraj(transformedPoints)
plot(MainTrajlines_df, add=T)
# Plot the trajectories
PlotTraj(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0)))
)
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
plotPoints = function(pointsObj){
oldpar <- par(no.readonly = TRUE)
par(mar = c(0, 0, 0, 0) + 2)
bb <- bbox(pointsObj)
#PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
#grid(col = "white")
plot(pointsObj, add = TRUE, pch=1)
cc <- coordinates(pointsObj)
#box()
par(oldpar)
}
plotPoints(transformedPoints)
points(transformedPoints)
points(transformedPoints@coords)
#transformed_lat = (MainTrajs$lat - min(MainTrajs$lat))/(max(MainTrajs$lat)-min(MainTrajs$lat))
#transformed_lon = (MainTrajs$lon - min(MainTrajs$lon))/(max(MainTrajs$lon)-min(MainTrajs$lon))
points(transformed_lon, transformed_lat)
View(transformedPoints@coords)
View(transformedPoints@proj4string)
View(transformedPoints)
View(MainTrajlines)
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints)
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, pts)
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, as.data.frame(pts))
plotPoints(transformedPoints_df)
# Plot the trajectories
PlotTraj(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0)))
)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, as.data.frame(pts))
plotPoints = function(pointsObj){
oldpar <- par(no.readonly = TRUE)
par(mar = c(0, 0, 0, 0) + 2)
bb <- bbox(pointsObj)
#PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
#grid(col = "white")
plot(pointsObj, add = TRUE, pch=1)
cc <- coordinates(pointsObj)
#box()
par(oldpar)
}
plotPoints(transformedPoints_df)
plotPoints(transformedPoints_df)
View(transformedPoints_df)
View(MainTrajlines_df)
points(transformedPoints_df@coords)
?spTransform
spTransform(pts, CRSobj = CRS("+proj=longlat +datum=NAD27"))
spTransform(pts, CRSobj = "+proj=longlat +datum=NAD27")
plot(MainTrajlines_df)
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))))
q
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0)))
)
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))))
2+2
PlotBgMap(transformedPoints, axes = TRUE)
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))))
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))), add=T)
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))), add=T)
plot(transformedPoints_df)
plot(transformedPoints_df, add=T)
View(transformedPoints_df)
View(transformedPoints_df$V1)
View(MainTrajlines_df)
View(transformedPoints_df@data)
View(tranformedPoints)
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat, MainTrajs$height)
View(pts)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, as.data.frame(pts))
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, pts, as.data.frame(pts))
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, as.data.frame(pts))
4%2
4%%2
row(pts)
reduced_pts <- pts[row(pts) %% 10 == 0, ]
reduced_pts <- pts[row(pts)%%10==0,]
row(pts)%%10
row(pts)%%10==0
# creating SpatialPoitns object for plotting
pts <- as.data.frame(cbind(MainTrajs$lon, MainTrajs$lat, MainTrajs$height))
reduced_pts <- pts[row(pts$V1)%%10==0,]
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat, MainTrajs$height)
reduced_pts <- pts[row(pts$V1)%%10==0,]
row(pts[,1])
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat, MainTrajs$height)
row(pts[,1])
pts[,1]
is.matrix(pts[,1])
# Merge the trajectories
MainTrajs <- rbind(traj500, traj1000, traj2000)
# Convert to Ds2SpLines and Ds2SpLinesDf
MainTrajlines <- Df2SpLines(MainTrajs, crs = "+proj=longlat +datum=NAD27")
MainTrajlines_df <- Df2SpLinesDf(MainTrajlines, MainTrajs, add.distance = T, add.azimuth = T)
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat, MainTrajs$height)
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, as.data.frame(pts))
# Plot trajectories and points
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
plot(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T,
)
plot(transformedPoints_df,
col = ifelse(transformedPoints_df$height == 500,
viridis(n=1, begin = 1),
ifelse(transformedPoints_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))))
plot(transformedPoints_df,
col = ifelse(transformedPoints_df$height == 500,
viridis(n=1, begin = 1),
ifelse(transformedPoints_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T
)
plot(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T,
)
plot(transformedPoints_df,
col = ifelse(transformedPoints_df$height == 500,
viridis(n=1, begin = 1),
ifelse(transformedPoints_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T
)
points(transformedPoints_df@coords)
# Merge the trajectories
MainTrajs <- rbind(traj500, traj1000, traj2000)
# Convert to Ds2SpLines and Ds2SpLinesDf
MainTrajlines <- Df2SpLines(MainTrajs, crs = "+proj=longlat +datum=NAD27")
MainTrajlines_df <- Df2SpLinesDf(MainTrajlines, MainTrajs, add.distance = T, add.azimuth = T)
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat, MainTrajs$height)
reduced_pts <- pts[row(pts[,1])%%10==0,]
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, as.data.frame(pts))
# Plot trajectories and points
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
plot(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T,
)
points(transformedPoints_df@coords)
plot(transformedPoints_df,
col = ifelse(transformedPoints_df$height == 500,
viridis(n=1, begin = 1),
ifelse(transformedPoints_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T
)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
legend(0, 1, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
legend(0, 10, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
legend(-20, 10, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
legend(-50, 20, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
legend(-52, 23, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))), add=T)
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))), add=T)
plot(MainTrajlines_df, col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))), add=T)
# Convert to Ds2SpLines and Ds2SpLinesDf
MainTrajlines <- Df2SpLines(MainTrajs, crs = "+proj=longlat +datum=NAD27")
MainTrajlines_df <- Df2SpLinesDf(MainTrajlines, MainTrajs, add.distance = T, add.azimuth = T)
# creating SpatialPoitns object for plotting
pts <- cbind(MainTrajs$lon, MainTrajs$lat, MainTrajs$height)
reduced_pts <- pts[row(pts[,1])%%10==0,]
transformedPoints <- SpatialPoints(pts, proj4string = CRS("+proj=longlat +datum=NAD27"))
transformedPoints_df <- SpatialPointsDataFrame(transformedPoints, as.data.frame(pts))
# Plot trajectories and points
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
plot(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T,
)
points(transformedPoints_df@coords)
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(-52, 23, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
length(transformedPoints_df@coords)
View(transformedPoints_df@coords)
View(transformedPoints_df@coords)
points(transformedPoints_df@coords[seq(1, length(transformedPoints_df@coords)), c(1,2)])
# Plot trajectories and points
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
plot(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T,
)
points(transformedPoints_df@coords[seq(1, length(transformedPoints_df@coords), 10)])
points(transformedPoints_df@coords[seq(1, length(transformedPoints_df@coords), 10), 1:2])
transformedPoints@coords[1]
transformedPoints@coords[1,1]
transformedPoints@coords[1,2]
transformedPoints@coords[1,1:3]
transformedPoints@coords[1,1:2]
transformedPoints@coords[seq(1:10),1:2]
points(transformedPoints_df@coords[seq(1, nrow(transformedPoints_df@coords), 10), 1:2])
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(-52, 23, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
points(transformedPoints_df@coords[seq(1, nrow(transformedPoints_df@coords), 10), 1:2], pch=1)
points(transformedPoints_df@coords[seq(1, nrow(transformedPoints_df@coords), 10), 1:2], pch=2)
thinnedPoints <- transformedPoints_df@coords[seq(1, nrow(transformedPoints_df@coords), 10), 1:2]
thinnedPoints <- transformedPoints_df@coords[seq(10, nrow(transformedPoints_df@coords), 10), 1:2]
points(thinnedPoints,
pch=2, col = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5), viridis(n=1, begin = 0)))
PlotBgMap(transformedPoints, xlim = bb[1, ], ylim = bb[2, ], axes = TRUE)
plot(MainTrajlines_df,
col = ifelse(MainTrajlines_df$height == 500,
viridis(n=1, begin = 1),
ifelse(MainTrajlines_df$height == 1000,
viridis(n=1, begin = 0.5),
viridis(n=1, begin=0))),
add = T,
)
thinnedPoints <- transformedPoints_df@coords[seq(10, nrow(transformedPoints_df@coords), 10), 1:2]
points(thinnedPoints,
pch=2, col = c(10*viridis(n=1, begin = 1), 10*viridis(n=1, begin = 0.5), 10*viridis(n=1, begin = 0)))
points(thinnedPoints,
pch=2, col = rep(c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5), viridis(n=1, begin = 0)), times=c(20,20,20)))
title(main = "Trajectories for October 28th 2013, backwards 200 hours",
outer = T, line = -1.6)
legend(-52, 23, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
legend(-53.9, 24.4, legend = c("500m", "1000m", "2000m"), bg = "transparent",
fill = c(viridis(n=1, begin = 1), viridis(n=1, begin = 0.5),
viridis(n=1, begin = 0)), title = "Starting altitude (m AGL)")
